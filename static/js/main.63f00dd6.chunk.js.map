{"version":3,"sources":["services/api-service.js","component/Container/Container.js","component/Searchbar/SearchBar.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Button/Button.js","component/Loader/Loader.js","component/Modal/Modal.js","component/ShowError/ShowError.js","App.js","reportWebVitals.js","index.js"],"names":["apiService","query","page","a","axios","get","data","hits","Container","children","className","Searchbar","onHandleSubmit","onSearchQueryChange","value","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","data-source","onClick","ImageGallery","images","map","id","Button","onLoadMore","LoaderItem","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onToggleModal","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Component","ErrorView","message","role","App","state","error","isLoading","showModal","searchImages","trim","toast","info","toggleLoader","request","setState","length","handleChange","handleSubmit","preventDefault","scrollPage","dataset","source","toggleModal","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","prevProps","prevState","texterror","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63f00dd6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiService = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=19614355-51590948188acde31377fd3a2&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return data.hits;\r\n};\r\n\r\nexport default apiService;","import PropTypes from 'prop-types';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import './SearchBar.css';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({ onHandleSubmit, onSearchQueryChange, value }) {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\n        <button type=\"submit\" className=\"SearchForm__button\">\n          <span className=\"SearchForm__button__label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm__input\"\n          type=\"text\"\n          value={value}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={onSearchQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  onSearchQueryChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Searchbar;","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags, onOpenModal }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        className=\"ImageGalleryItem_image\"\n        onClick={onOpenModal}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;","// import PT from 'prop-types';\n// import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n// import style from './ImageGallery.css';\n\n// function ImageGallery({ images, onOpenModal }) {\n//   return (\n//     <ul className={style.ImageGallery}>\n//       {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n//         <ImageGalleryItem\n//           key={id}\n//           webformatURL={webformatURL}\n//           largeImageURL={largeImageURL}\n//           tags={tags}\n//           onOpenModal={onOpenModal}\n//         />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// ImageGallery.propTypes = {\n//   images: PT.array.isRequired,\n//   onOpenModal: PT.func.isRequired,\n// };\n\n// export default ImageGallery;\n\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nfunction ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onOpenModal={onOpenModal}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;","import PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;","import Loader from 'react-loader-spinner';\nimport './Loader.css';\n\nfunction LoaderItem() {\n  return (\n    <div className=\"Loader\">\n      <Loader\n        type=\"Grid\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={0}\n      />\n    </div>\n  );\n}\n\nexport default LoaderItem;","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modalPortal');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onToggleModal();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onToggleModal();\n    }\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;","import PropTypes from 'prop-types';\r\n\r\nfunction ErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Sorry, something went wrong. Error: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorView;","import { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport apiService from './services/api-service';\nimport Container from './component/Container/Container';\nimport Searchbar from './component/Searchbar/SearchBar';\nimport ImageGallery from './component/ImageGallery/ImageGallery';\nimport Button from './component/Button/Button';\nimport LoaderComponent from './component/Loader/Loader';\nimport Modal from './component/Modal/Modal';\nimport ErrorView from './component/ShowError/ShowError';\n\nclass App extends Component {\n  state = {\n    query: '',\n    images: [],\n    largeImageURL: '',\n    page: 1,\n    error: null,\n    isLoading: false,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.setState({ images: [], page: 1, error: null });\n    }\n  }\n\n  searchImages = async () => {\n    const { query, page } = this.state;\n\n    if (query.trim() === '') {\n      return toast.info(' Please enter search query  to find images!');\n    }\n\n    this.toggleLoader();\n\n    try {\n      const request = await apiService(query, page);\n      this.setState(({ images, page }) => ({\n        images: [...images, ...request],\n        page: page + 1,\n      }));\n      if (request.length === 0) {\n        this.setState({ error: `No results were found for ${query}!` });\n      }\n    } catch (error) {\n      this.setState({ error: 'Something went wrong. Try again.' });\n    } finally {\n      this.toggleLoader();\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.searchImages();\n  };\n\n  onLoadMore = () => {\n    this.searchImages();\n    this.scrollPage();\n  };\n\n  onOpenModal = e => {\n    this.setState({ largeImageURL: e.target.dataset.source });\n    this.toggleModal();\n  };\n\n  toggleLoader = () => {\n    this.setState(({ isLoading }) => ({\n      isLoading: !isLoading,\n    }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  render() {\n    const {\n      query,\n      images,\n      largeImageURL,\n      isLoading,\n      showModal,\n      error,\n    } = this.state;\n    return (\n      <Container>\n        <Searchbar\n          onHandleSubmit={this.handleSubmit}\n          onSearchQueryChange={this.handleChange}\n          value={query}\n        />\n\n        {error && <ErrorView texterror={error} />}\n\n        {images.length > 0 && (\n          <ImageGallery images={images} onOpenModal={this.onOpenModal} />\n        )}\n\n        {isLoading && <LoaderComponent />}\n\n        {!isLoading && images.length > 0 && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n\n        {showModal && (\n          <Modal\n            onToggleModal={this.toggleModal}\n            largeImageURL={largeImageURL}\n          />\n        )}\n        <ToastContainer autoClose={3700} />\n      </Container>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}