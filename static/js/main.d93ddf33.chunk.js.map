{"version":3,"sources":["services/apiService.js","component/Button/Button.js","component/ErrorView/ErrorView.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Loader/Loader.js","component/Modal/Modal.js","component/Searchbar/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["apiService","query","page","a","axios","get","data","hits","Button","onLoadMore","type","className","style","onClick","ErrorView","texterror","role","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","data-source","ImageGalleryItem_image","ImageGallery","images","map","id","LoaderItem","Loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onToggleModal","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Overlay","Component","Searchbar","onHandleSubmit","onSearchQueryChange","value","SearchForm","onSubmit","SearchForm__button","SearchForm__button__label","SearchForm__input","autoComplete","autoFocus","placeholder","onChange","App","state","error","isLoading","showModal","searchImages","trim","toast","info","toggleLoader","request","setState","length","handleChange","handleSubmit","preventDefault","scrollPage","dataset","source","toggleModal","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","prevProps","prevState","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d93ddf33.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiService = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=19614355-51590948188acde31377fd3a2&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return data.hits;\r\n};\r\n\r\nexport default apiService;","import PT from 'prop-types';\r\nimport style from './Button.css';\r\n\r\nfunction Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className={style.Button} onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PT.func.isRequired,\r\n};\r\n\r\nexport default Button;","import PT from 'prop-types';\r\n\r\nfunction ErrorView({ texterror }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Sorry, something went wrong. Error: {texterror}\r\n        \r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorView.propTypes = {\r\n  texterror: PT.string.isRequired,\r\n};\r\n\r\nexport default ErrorView;","    \r\nimport PT from 'prop-types';\r\nimport style from './ImageGalleryItem.css';\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags, onOpenModal }) {\r\n  return (\r\n    <li className={style.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-source={largeImageURL}\r\n        className={style.ImageGalleryItem_image}\r\n        onClick={onOpenModal}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PT.string.isRequired,\r\n  tags: PT.string.isRequired,\r\n  webformatURL: PT.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PT from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport style from './ImageGallery.css';\r\n\r\nfunction ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className={style.ImageGallery}>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PT.array.isRequired,\r\n  onOpenModal: PT.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport Spinner from 'react-loader-spinner';\r\nimport style from './Loader.css';\r\n\r\nfunction LoaderItem() {\r\n  return (\r\n    <div className={style.Loader}>\r\n      <Spinner\r\n        type=\"Grid\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoaderItem;","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PT from 'prop-types';\r\nimport style from './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onToggleModal();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onToggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={style.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={style.Modal}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onToggleModal: PT.func.isRequired,\r\n};\r\n\r\nexport default Modal;","import style from './Searchbar.css';\r\nimport PT from 'prop-types';\r\n\r\nfunction Searchbar({ onHandleSubmit, onSearchQueryChange, value }) {\r\n  return (\r\n    <header className={style.Searchbar}>\r\n      <form className={style.SearchForm} onSubmit={onHandleSubmit}>\r\n        <button type=\"submit\" className={style.SearchForm__button}>\r\n          <span className={style.SearchForm__button__label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={style.SearchForm__input}\r\n          type=\"text\"\r\n          value={value}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={onSearchQueryChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onHandleSubmit: PT.func.isRequired,\r\n  onSearchQueryChange: PT.func.isRequired,\r\n  value: PT.string.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport apiService from './services';\nimport Button from './component/Button';\nimport ErrorView from './component/ErrorView';\nimport ImageGallery from './component/ImageGallery';\nimport Loader from './component/Loader';\nimport Modal from './component/Modal';\nimport Searchbar from './component/Searchbar';\n\nclass App extends Component {\n  state = {\n    query: '',\n    images: [],\n    largeImageURL: '',\n    page: 1,\n    error: null,\n    isLoading: false,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.setState({ images: [], page: 1, error: null });\n    }\n  }\n\n  searchImages = async () => {\n    const { query, page } = this.state;\n\n    if (query.trim() === '') {\n      return toast.info(' Please enter search query  to find images!');\n    }\n\n    this.toggleLoader();\n\n    try {\n      const request = await apiService(query, page);\n      this.setState(({ images, page }) => ({\n        images: [...images, ...request],\n        page: page + 1,\n      }));\n      if (request.length === 0) {\n        this.setState({ error: `No results were found for ${query}!` });\n      }\n    } catch (error) {\n      this.setState({ error: 'Something went wrong. Try again.' });\n    } finally {\n      this.toggleLoader();\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.searchImages();\n  };\n\n  onLoadMore = () => {\n    this.searchImages();\n    this.scrollPage();\n  };\n\n  onOpenModal = e => {\n    this.setState({ largeImageURL: e.target.dataset.source });\n    this.toggleModal();\n  };\n\n  toggleLoader = () => {\n    this.setState(({ isLoading }) => ({\n      isLoading: !isLoading,\n    }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  render() {\n    const {\n      query,\n      images,\n      largeImageURL,\n      isLoading,\n      showModal,\n      error,\n    } = this.state;\n    return (\n      <div>\n        <Searchbar\n          onHandleSubmit={this.handleSubmit}\n          onSearchQueryChange={this.handleChange}\n          value={query}\n        />\n\n        {error && <ErrorView texterror={error} />}\n\n        {images.length > 0 && (\n          <ImageGallery images={images} onOpenModal={this.onOpenModal} />\n        )}\n\n        {isLoading && <Loader />}\n\n        {!isLoading && images.length > 0 && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n\n        {showModal && (\n          <Modal\n            onToggleModal={this.toggleModal}\n            largeImageURL={largeImageURL}\n          />\n        )}\n        <ToastContainer autoClose={3700} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}